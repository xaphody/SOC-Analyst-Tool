from tkinter import *
import webbrowser
import requests
import json
import csv

# Frames
root = Tk()
root.geometry('600x60+400+20')
#Forces program to be ontop of everything
root.wm_attributes("-topmost", 1)
root.resizable(True, True)
root.title("Analyst Quick Tool")
TFrame = Frame(root, height=90)
BFrame = Frame(root)
TFrame.pack(side="top")
BFrame.pack(side="top", expand=False)

# Functions
# Opens webpage for Port information
def PortChecker(*args):
	webbrowser.open_new(
		"https://www.speedguide.net/port.php?port=" + IP.get())

# Returns Threat information for Email Addresses
def Email_Checker():
	NW = Toplevel(root)
	NW.geometry('280x310+118+20')
	NW.title("Email Rep")
	IB = Text(NW, wrap=WORD)
	IB.pack()
	url = "https://emailrep.io/" + IP.get()
	print(url)
	headers = {
				"Accept": "application/json",
				"key": ""
				}

	response = requests.request(method="GET", url=url, headers=headers)
	load = json.loads(response.text)
	result = json.dumps(load,sort_keys=True,indent=1)
	IB.insert(END, result)
	root.mainloop()

# Opens webpage for Information on Process'.
def ProcessChecker(*args):
	webbrowser.open_new("https://www.file.net/process/" + IP.get() + ".html")

# Converts an IP address (Octet) to Interger which could be a Phone number
def IPPHN(*args):
	oct1, oct2, oct3, oct4 = IP.get().split(".")
	a = int(oct1) * 16777216
	b = int(oct2) * 65536
	c = int(oct3) * 256
	IP.delete(0, END)
	IP.insert(0, a + b + c + int(oct4))

# Button to Clear all the fields.
def Clear():
	IP.delete(0, END)

#Returns a JSON in a new window for IP threat intelligence
def IPQuick(*args):
	NW = Toplevel(root)
	NW.geometry('280x310+118+20')
	NW.title("IP Info")
	IB = Text(NW, wrap=WORD)
	IB.pack()
	# Defining the api-endpoint
	url = 'https://api.abuseipdb.com/api/v2/check?ipAddress=' + IP.get()
	print(url)
	headers = {
		'Accept': 'application/json',
		'Key': ''
	}
	response = requests.request(method='GET', url=url, headers=headers)
	# Formatted output
	#result = response.text
	load = json.loads(response.text)
	# print (json.dumps(decodedResponse, sort_keys=True, indent=4,))
	result = json.dumps(load,sort_keys=True,indent=1).split("\\")
	
	IB.insert(END, result)
	IB.insert(END,"\n")
	IB.insert(END, "https://www.abuseipdb.com/check/" + IP.get())
	IB.insert(END, "\n")
	IB.insert(END, "https://exchange.xforce.ibmcloud.com/ip/" + IP.get())
	IB.insert(END, "\n")
	IB.insert(END, "https://www.virustotal.com/gui/ip-address/" + IP.get())

# adds an entry to a csv file for tracking

	dbu = {"IP Address": 0,
          "Rep":0
          }
	dbu["IP Address"] = IP.get()
	dbu["Rep"]= load['data']['abuseConfidenceScore']
	with open('some.csv', 'a') as f:
		fieldnames = ['IP Address','Rep']
		writer = csv.DictWriter(f, fieldnames)
		writer.writerow(dbu)
	root.mainloop()

#Returns a JSON for URL threat intelligence
def URLCheck(*args):
	NW = Toplevel(root)
	NW.geometry('280x310+118+20')
	NW.title("URL Threat Info")
	IB = Text(NW, wrap=WORD)
	IB.pack()
	Query = IP.get()

	url = 'https://www.virustotal.com/vtapi/v2/url/report'

	params = {'apikey': '', 'resource':Query}

	response = requests.get(url, params=params)
	load = json.loads(response.text)
	result = json.dumps(load,sort_keys=True,indent=2).split("\\")
	params['resource']= Query
	IB.insert(END, result)


# Grid Management, Buttons and function bindings
IP = Entry(TFrame, width=92)
ECB = Button(BFrame, text="Email Rep", command=Email_Checker, width=10)
CB = Button(BFrame, text="Clear", command=Clear, width=10)
IPQ = Button(BFrame, text="IP Quick", command=IPQuick, width=10)
URLC = Button(BFrame, text="URL", command=URLCheck, width=10)
PortL = Button(BFrame, text="Port", command=PortChecker, width=10)
PL = Button(BFrame, text="Process", command=ProcessChecker, width=10)
PHL = Button(BFrame, text="Phone #", command=IPPHN, width=10)
IP.grid(row=0, column=0, sticky=W)
IPQ.grid(row=1, column=0)
URLC.grid(row=1, column=1)
ECB.grid(row=1, column=2)
CB.grid(row=1, column=6)
PortL.grid(row=1, column=3)
PL.grid(row=1, column=4)
PHL.grid(row=1, column=5)
IP.bind("<F1>",IPQuick)
IP.bind("<F2>",URLCheck)
IP.bind("<F3>", Email_Checker)
IP.bind("<F4>", IPChecker)


root.mainloop()
